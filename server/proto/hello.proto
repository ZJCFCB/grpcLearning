//这是在说明我们使用的是proto3语法。
//把它想成是一个接口文件,客户端和服务端都长一个样，一个实现，一个调用

syntax = "proto3";

//这部分的内容是关于最后生成的g0文件是处在哪个目录哪个包中，.代表在当前目录生成，service代表了生成的go文件的包名是service.
option go_package=".;service";

//然后我们需要定义一个服务，在这个服务中需要有一个方法，这个方法可以接受客户端的参数，再返回服务端的响应。

//定义了一个service，名称为SayHello，这个服务中有一个rpc方法，名为SayHello。
//这个方法会发送一个HelloRequest，然后返回一个HelloResponse。
service SayHello{
  rpc SayHello(HelloRequest)returns(HelloResponse){}
}

//messaqe关键字，其实你可以理解为Golang中的结构体:
//变量后面的=不是赋值，而是在定义这个变量在这个message中的位置。
message HelloRequest{
  string reguestName=1;
  int64 age = 2;
  repeated string name =3;   //repeated 对应go中的切片
}

message HelloResponse{
  string responseMsg =1;
}